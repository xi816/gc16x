#!/usr/bin/python3
import os;
import sys;
rs = ["a", "b", "c", "d", "s", "g", "sp", "bp"];

def nhex(a: int): return hex(a)[2:].upper();
def nhexc(a: str): return hex(ord(a))[2:].upper();

def b(a: int, b: int) -> int:
  return a + (b << 8)

def showdata(filename: str):
  try:
    with open(filename, "rb") as fl:
      bd = fl.read();
  except:
    print("error opening file");
    return 1;
  print("data:");
  for i,j in enumerate(bd):
    print(f"\033[97m${hex(i)[2:].upper():0>4} \033[32m{hex(j)[2:].upper():0>2} \033[37m{j:0>3}");
  return 0;

def disasm(filename: str):
  try:
    with open(filename, "rb") as fl:
      s = fl.read();
  except:
    print("error opening file");
    return 1;
  print("disassembled:");
  p = 0;
  bdl = len(s);
  while (p < bdl):
    print(end=f"${nhex(p):0>4} | ");
    if (s[p] == 0x51):
      print("hlt");
      p += 1;
    elif ((s[p] == 0x0F) and (s[p+1] == 0x30)):
      print(f"jmp     ${nhex(b(s[p+2], s[p+3])):0>4}");
      p += 4;
    elif ((s[p] == 0x0F) and (s[p+1] == 0x29)):
      print(f"jme     ${nhex(b(s[p+2], s[p+3])):0>4}");
      p += 4;
    elif ((s[p] == 0x0F) and (s[p+1] == 0x2A)):
      print(f"jmne    ${nhex(b(s[p+2], s[p+3])):0>4}");
      p += 4;
    elif ((s[p] == 0x0F) and (s[p+1] == 0xC2)):
      print(f"int     ${nhex(s[p+2]):0>2}");
      p += 3;
    elif ((s[p] == 0x0F) and (s[p+1] == 0x84)):
      print(f"push    ${nhex(b(s[p+2], s[p+3])):0>4}");
      p += 4;
    elif ((s[p] == 0x0F) and (s[p+1] == 0x90)):
      print(f"push    %{rs[s[p+2]]}");
      p += 3;
    elif (s[p] == 0xB8):
      print(f"loop    ${nhex(b(s[p+1], s[p+2])):0>4}");
      p += 3;
    elif (s[p] == 0xC7):
      print(f"call    ${nhex(b(s[p+1], s[p+2])):0>4}");
      p += 3;
    elif ((s[p] == 0x10) and (s[p+1] == 0x87)):
      print("lodsb");
      p += 3;
    elif ((s[p] == 0x10) and (s[p+1] == 0x89)):
      print("lodgb");
      p += 3;
    else:
      print("???");
      p += 1;

  return 0;

def main(argc: int, argv: list):
  print("unkasm disassembler for govno core 16x");
  if (argc == 1):
    print("end");
    return 1;
  if (argc == 2):
    print("no file.");
    return 1;
  if (argv[1] == "data"):
    return showdata(argv[2]);
  elif (argv[1] == "dis"):
    return disasm(argv[2]);
  else:
    print("unknown command");
    return 1;
  return 0;

sys.exit(main(len(sys.argv), sys.argv));

